{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vijay\\\\Documents\\\\learning\\\\react\\\\course\\\\forms\\\\src\\\\components\\\\BasicForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useBInput from \"../hooks/useb-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BasicForm = props => {\n  _s();\n  const {\n    enteredInput: firstName,\n    enteredInputHasError: firstNameHasError,\n    isValid: firstNameIsValid,\n    inputValueChangeHandler: firstNameChangeHandler,\n    onBlurHandler: firstNameBlurHandler\n  } = useBInput(value => value.trim() !== \"\");\n  const {\n    enteredInput: lastName,\n    enteredInputHasError: lastNameHasError,\n    isValid: lastNameIsValid,\n    inputValueChangeHandler: lastNameChangeHandler,\n    onBlurHandler: lastNameBlurHandler\n  } = useBInput(value => value.trim() !== \"\");\n  const {\n    enteredInput: emailAddress,\n    enteredInputHasError: emailAddressHasError,\n    isValid: emailAddressIsValid,\n    inputValueChangeHandler: emailAddressChangeHandler,\n    onBlurHandler: emailAddressBlurHandler\n  } = useBInput(value => value.trim() !== \"\" & value.includes(\"@\"));\n  let formIsValid = false;\n  if (firstNameIsValid & lastNameIsValid & emailAddressIsValid) {\n    formIsValid = true;\n  }\n  const formSubmitHandler = () => {};\n  const emailErrorText = emailAddress.trim() === \"\" && \"Email Address can not be blank!\" || emailAddress.includes(\"@\") === false && \"Email Address must contain @\";\n  const firstNameInputClass = firstNameHasError ? \"form-control invalid\" : \"form-control\";\n  const lastNameInputClass = lastNameHasError ? \"form-control invalid\" : \"form-control\";\n  const emailAddressInputClass = emailAddressHasError ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: firstNameInputClass,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: firstNameChangeHandler,\n          value: firstName,\n          onBlur: firstNameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), firstNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Field must not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameInputClass,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: lastNameChangeHandler,\n          value: lastName,\n          onBlur: lastNameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), lastNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Field must not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailAddressInputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: emailAddressChangeHandler,\n        value: emailAddress,\n        onBlur: emailAddressBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), emailAddressHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: emailErrorText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicForm, \"AyJldSuZPynvxNi4qPfegqu4kL0=\", false, function () {\n  return [useBInput, useBInput, useBInput];\n});\n_c = BasicForm;\nexport default BasicForm;\nvar _c;\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["useState","useBInput","jsxDEV","_jsxDEV","BasicForm","props","_s","enteredInput","firstName","enteredInputHasError","firstNameHasError","isValid","firstNameIsValid","inputValueChangeHandler","firstNameChangeHandler","onBlurHandler","firstNameBlurHandler","value","trim","lastName","lastNameHasError","lastNameIsValid","lastNameChangeHandler","lastNameBlurHandler","emailAddress","emailAddressHasError","emailAddressIsValid","emailAddressChangeHandler","emailAddressBlurHandler","includes","formIsValid","formSubmitHandler","emailErrorText","firstNameInputClass","lastNameInputClass","emailAddressInputClass","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Vijay/Documents/learning/react/course/forms/src/components/BasicForm.js"],"sourcesContent":["import { useState } from \"react\";\nimport useBInput from \"../hooks/useb-input\";\n\nconst BasicForm = (props) => {\n  const {\n    enteredInput: firstName,\n    enteredInputHasError: firstNameHasError,\n    isValid: firstNameIsValid,\n    inputValueChangeHandler: firstNameChangeHandler,\n    onBlurHandler: firstNameBlurHandler,\n  } = useBInput((value) => value.trim() !== \"\");\n\n  const {\n    enteredInput: lastName,\n    enteredInputHasError: lastNameHasError,\n    isValid: lastNameIsValid,\n    inputValueChangeHandler: lastNameChangeHandler,\n    onBlurHandler: lastNameBlurHandler,\n  } = useBInput((value) => value.trim() !== \"\");\n\n  const {\n    enteredInput: emailAddress,\n    enteredInputHasError: emailAddressHasError,\n    isValid: emailAddressIsValid,\n    inputValueChangeHandler: emailAddressChangeHandler,\n    onBlurHandler: emailAddressBlurHandler,\n  } = useBInput((value) => (value.trim() !== \"\") & value.includes(\"@\"));\n\n  let formIsValid = false;\n\n  if (firstNameIsValid & lastNameIsValid & emailAddressIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmitHandler = () => {};\n\n  const emailErrorText =\n    (emailAddress.trim() === \"\" && \"Email Address can not be blank!\") ||\n    (emailAddress.includes(\"@\") === false && \"Email Address must contain @\");\n\n  const firstNameInputClass = firstNameHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const lastNameInputClass = lastNameHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const emailAddressInputClass = emailAddressHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className=\"control-group\">\n        <div className={firstNameInputClass}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={firstNameChangeHandler}\n            value={firstName}\n            onBlur={firstNameBlurHandler}\n          />\n          {firstNameHasError && (\n            <p className=\"error-text\">Field must not be empty</p>\n          )}\n        </div>\n        <div className={lastNameInputClass}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={lastNameChangeHandler}\n            value={lastName}\n            onBlur={lastNameBlurHandler}\n          />\n          {lastNameHasError && (\n            <p className=\"error-text\">Field must not be empty</p>\n          )}\n        </div>\n      </div>\n      <div className={emailAddressInputClass}>\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={emailAddressChangeHandler}\n          value={emailAddress}\n          onBlur={emailAddressBlurHandler}\n        />\n        {emailAddressHasError && <p className=\"error-text\">{emailErrorText}</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}